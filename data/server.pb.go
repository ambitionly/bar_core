// Code generated by protoc-gen-go.
// source: server.proto
// DO NOT EDIT!

package bar

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BarCore service

type BarCoreClient interface {
	AddPost(ctx context.Context, in *AddPostReq, opts ...grpc.CallOption) (*AddPostRsp, error)
}

type barCoreClient struct {
	cc *grpc.ClientConn
}

func NewBarCoreClient(cc *grpc.ClientConn) BarCoreClient {
	return &barCoreClient{cc}
}

func (c *barCoreClient) AddPost(ctx context.Context, in *AddPostReq, opts ...grpc.CallOption) (*AddPostRsp, error) {
	out := new(AddPostRsp)
	err := grpc.Invoke(ctx, "/bar.BarCore/AddPost", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BarCore service

type BarCoreServer interface {
	AddPost(context.Context, *AddPostReq) (*AddPostRsp, error)
}

func RegisterBarCoreServer(s *grpc.Server, srv BarCoreServer) {
	s.RegisterService(&_BarCore_serviceDesc, srv)
}

func _BarCore_AddPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPostReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BarCoreServer).AddPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bar.BarCore/AddPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BarCoreServer).AddPost(ctx, req.(*AddPostReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _BarCore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bar.BarCore",
	HandlerType: (*BarCoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPost",
			Handler:    _BarCore_AddPost_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}

func init() { proto.RegisterFile("server.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 97 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x4a, 0x2c, 0x92, 0xe2, 0x2a,
	0xc8, 0x2f, 0x2e, 0x81, 0x08, 0x18, 0x59, 0x70, 0xb1, 0x3b, 0x25, 0x16, 0x39, 0xe7, 0x17, 0xa5,
	0x0a, 0xe9, 0x72, 0xb1, 0x3b, 0xa6, 0xa4, 0x04, 0xe4, 0x17, 0x97, 0x08, 0xf1, 0xeb, 0x25, 0x25,
	0x16, 0xe9, 0x41, 0x79, 0x41, 0xa9, 0x85, 0x52, 0xa8, 0x02, 0xc5, 0x05, 0x4a, 0x0c, 0x49, 0x6c,
	0x60, 0x03, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x83, 0x87, 0x32, 0x3d, 0x61, 0x00, 0x00,
	0x00,
}
